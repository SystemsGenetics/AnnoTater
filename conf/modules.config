/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: PARSE_BLASTXML {
        publishDir = [
            path: { "${params.outdir}/DIAMOND" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            enabled: true
        ]
    }
    withName: 'DIAMOND_BLASTP' {
        ext.args = "--evalue 1e-5 --query-cover 50 --subject-cover 50 --more-sensitive --top 1"
        publishDir = [
            path: { "${params.outdir}/DIAMOND" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            enabled: true
        ]
        cpus   = { 1                   }
        memory = { 6.GB * task.attempt }
        time   = { 4.h  * task.attempt }
    }
    withName: 'DIAMOND_BLASTX' {
        ext.args = "--evalue 1e-5 --query-cover 50 --subject-cover 50 --more-sensitive --top 1"
        publishDir = [
            path: { "${params.outdir}/DIAMOND" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            enabled: true
        ]
        cpus   = { 1                   }
        memory = { 6.GB * task.attempt }
        time   = { 4.h  * task.attempt }
    }

    withName: BLAST_COMBINE {
        publishDir = [
            path: { "${params.outdir}/DIAMOND" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            enabled: true
        ]
    }
    withName: 'INTERPROSCAN' {
        //ext.args = "-f TSV,XML --goterms --iprlookup --pathways --mode standalone --applications 'TIGRFAM,SFLD,SUPERFAMILY,Gene3D,Hamap,Coils,ProSiteProfiles,SMART,CDD,PRINTS,Pfam,MobiDBLite,PIRSF,ProDom,PANTHER'"
        ext.args = "-f TSV,XML --goterms --iprlookup --pathways --mode standalone -appl TIGRFAM -appl SFLD -appl SUPERFAMILY -appl Gene3D -appl Hamap -appl Coils -appl ProSiteProfiles -appl SMART -appl CDD -appl PRINTS -appl Pfam -appl MobiDBLite -appl PIRSF -appl ProDom"
        publishDir = [
            path: { "${params.outdir}/InterProScan" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            enabled: true
        ]
        cpus   = { 1                   }
        memory = { 6.GB * task.attempt }
        time   = { 4.h  * task.attempt }
    }
    withName: 'INTERPROSCAN_COMBINE' {
        publishDir = [
            path: { "${params.outdir}/InterProScan" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            enabled: true
        ]
    }
    withName: 'FIND_EC_NUMBERS' {
        publishDir = [
            path: { "${params.outdir}/ECnumbers" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            enabled: true
        ]
    }
}
