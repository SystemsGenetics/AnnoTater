/**
 * ===========================
 * FUNC-A Configuration File
 * ===========================
 *
 * This file provides the configuration settings for the FUNC-A workflow.
 */
manifest {
  mainScript = "main.nf"
  defaultBranch = "master"
  nextflowVersion = ">=18.0"
}


params {
  input {
    transcript_fasta = "${PWD}/examples/Citrus_sinensis-orange1.1g015632m.g.fasta"
  }
  output {
    dir = "${PWD}/output"
  }
  execution {
    queue_size = 100
    threads = 1
    max_retries = 2
    error_strategy = "ignore"
  }
  software {
    interproscan {
      core_data_path = ""
      panterh_data_path = ""
    }
  }
}

report {
  file = "${params.output.dir}/report.html"
}


timeline {
  file = "${params.output.dir}/timeline.html"
}

trace {
  fields = "task_id,hash,native_id,process,tag,name,status,exit,module,container,cpus,time,disk,memory,attempt,submit,start,complete,duration,realtime,queue,%cpu,%mem,rss,vmem,peak_rss,peak_vmem,rchar,wchar,syscr,syscw,read_bytes,write_bytes"
  file = "${params.output.dir}/trace.txt"
  raw = true
}

docker {
  fixOwnership = true
  runOptions = "--init"
  sudo = true
}

singularity {

}

process {
  container = "systemsgenetics/gemmaker"

  withLabel:rate_limit {
    maxForks = 1
  }
  withLabel:retry {
    errorStrategy = { "${task.attempt}" == "${params.execution.max_retries}" ? "retry" : "${params.execution.error_strategy}" }
  }

  withLabel:interproscan {
    container = "systemsgenetics/interproscan:5.32"
    time = "24h"
  }
  
}

profiles {
  //
  // The standard profile uses the local executor, in which processes are simply
  // launched as normal processes on the local machine. By default the local
  // executor uses the number of CPU cores to limit how many processes are run
  // in parallel.
  //
  standard {
    process.executor = "local"
  }

  // A profile for execution of GEMmaker on a stand-alone machine
  // using Docker.
  localDocker {
    docker {
      enabled = true
      fixOwnership = true
      runOptions = '-u $(id -u):$(id -g)'
    }
  }

  // A profile for execution of GEMmaker on a stand-alone machine
  // using singularity.
  localSingularity {
    singularity {
      enabled = true
      singularity.runOptions = "--bind ${params.software.interproscan.core_data_path}:/usr/local/interproscan/data,${params.software.interproscan.panther_data_path}:/usr/local/interproscan/data/panther "
    }
  }


  //
  // The testing profile is used to override the execution params and force the
  // workflow to terminate immediately if any process fails, which is useful for
  // debugging purposes.
  //
  testing {
    process {
      withLabel:retry {
        errorStrategy = "terminate"
      }
    }
  }

  //
  // Clemson's Palmetto cluster uses the PBS scheduler. Here we provide
  // an example for execution of this workflow on Palmetto with some
  // defaults for all steps of the workflow.
  //
  pbs {
    process {
      executor = "pbs"
      time = "8h"

      withLabel: "multithreaded" {
        clusterOptions = "-l select=1:mem=8gb:ncpus=${params.execution.threads}"
      }
      withLabel: "!multithreaded" {
        clusterOptions = "-l select=1:mem=2gb:ncpus=2"
      }
    }
    executor {
      queueSize = "${params.execution.queue_size}"
    }
    singularity {
      enabled = true
      singularity.runOptions = "--bind ${params.software.interproscan.core_data_path}:/usr/local/interproscan/data,${params.software.interproscan.panther_data_path}:/usr/local/interproscan/data/panther,/tmp:/tmp "

    }
  }

  //
  // WSU's Kamiak cluster uses the SLURM scheduler. Here we provide
  // an example for execution of this workflow on Kamiak with some
  // defaults for all steps of the workflow.
  //
  slurm {
    process {
      executor = "slurm"
      queue = "ficklin"
      time = "4h"

      withLabel: "multithreaded" {
        cpus = "${params.execution.threads}"
      }
      withLabel: "!multithreaded" {
        cpus = 1
      }

    }
    executor {
      queueSize = "${params.execution.queue_size}"
    }
    singularity {
      enabled = true
      singularity.runOptions = "--bind ${params.software.interproscan.core_data_path}:/usr/local/interproscan/data,${params.software.interproscan.panther_data_path}:/usr/local/interproscan/data/panther,/tmp:/tmp "
    }
  }
}
